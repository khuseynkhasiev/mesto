{"version":3,"file":"index.js","mappings":"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","sources":["webpack://project_mesto/./src/scripts/components/FormValidator.js","webpack://project_mesto/./src/scripts/components/Card.js","webpack://project_mesto/./src/scripts/utils/constans.js","webpack://project_mesto/./src/scripts/components/Section.js","webpack://project_mesto/./src/scripts/components/Popup.js","webpack://project_mesto/./src/scripts/components/PopupWithForm.js","webpack://project_mesto/./src/scripts/components/PopupWithImage.js","webpack://project_mesto/./src/scripts/components/UserInfo.js","webpack://project_mesto/./src/scripts/components/Api.js","webpack://project_mesto/./src/scripts/components/PopupWithSubmit.js","webpack://project_mesto/./src/pages/index.js"],"sourcesContent":["export default class FormValidator {\r\n  constructor(popup, validationConfig) {\r\n    this._formSelector = validationConfig.formSelector;\r\n    this._inputSelector = validationConfig.inputSelector;\r\n    this._submitButtonSelector = validationConfig.submitButtonSelector;\r\n    this._inactiveButtonClass = validationConfig.inactiveButtonClass;\r\n    this._inputErrorClass = validationConfig.inputErrorClass;\r\n    this._popup = popup;\r\n    this._popupForm = this._popup.querySelector('.popup__form');\r\n    this._inputList = Array.from(this._popup.querySelectorAll(this._inputSelector));\r\n    this._buttonElement = this._popup.querySelector(this._submitButtonSelector);\r\n  }\r\n\r\n  // метод принимает массив полей\r\n  _hasInvalidInput = (inputList => {\r\n    // проходим по этому массиву методом some\r\n    return inputList.some((inputElement) => {\r\n      // Если поле не валидно, колбэк вернёт true\r\n      // Обход массива прекратится и вся функция\r\n      // hasInvalidInput вернёт true\r\n      return !inputElement.validity.valid;\r\n    })\r\n  })\r\n\r\n  // метод очистки ошибок и деактивации кнопки\r\n  resetForm() {\r\n    if (this._popup.contains(this._popupForm)) {\r\n\r\n      // очищаем/скрываем ошибки инпутов\r\n      this._inputList.forEach((inputElement) => {\r\n        this._hideInputError(inputElement);\r\n      })\r\n\r\n      // Деативурем кнопку отправки в текущей форме\r\n      this._toggleButtonState();\r\n    }\r\n  }\r\n\r\n  //скрытие ошибки\r\n  _hideInputError = (inputElement) => {\r\n    // Находим элемент ошибки\r\n    const errorSpan = this._popupForm.querySelector(`#${inputElement.id}-error`);\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorSpan.textContent = '';\r\n  }\r\n\r\n  // отображение ошибки\r\n  _showInputError = (inputElement, errorMessage) => {\r\n    // Находим элемент ошибки внутри самой функции\r\n    const errorSpan = this._popupForm.querySelector(`#${inputElement.id}-error`);\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorSpan.textContent = errorMessage;\r\n  }\r\n\r\n  // проверка на валидацию поля инпута\r\n  _isValid = (inputElement) => {\r\n    if (!inputElement.validity.valid) {\r\n      this._showInputError(inputElement, inputElement.validationMessage);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  }\r\n\r\n  // Метод принимает массив полей ввода\r\n  // и элемент кнопки, состояние которой нужно менять\r\n  _toggleButtonState = () => {\r\n    // Если есть хотя бы один невалидный инпут\r\n    if (this._hasInvalidInput(this._inputList)) {\r\n      // сделай кнопку неактивной\r\n      this._buttonElement.classList.add(this._inactiveButtonClass);\r\n      this._buttonElement.disabled = true;\r\n    } else {\r\n      // иначе сделай кнопку активной\r\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\r\n      this._buttonElement.disabled = false;\r\n    }\r\n  }\r\n\r\n  // находим все инпуты массива\r\n  _setEventListeners = () => {\r\n\r\n    // Обойдём все элементы полученной коллекции\r\n    this._inputList.forEach((inputElement) => {\r\n      // каждому полю добавим обработчик события input\r\n      inputElement.addEventListener('input', () => {\r\n        // Внутри колбэка вызовем isValid,\r\n        // передав ей форму и проверяемый элемент\r\n        this._isValid(inputElement);\r\n\r\n        // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n        this._toggleButtonState();\r\n      })\r\n    })\r\n  }\r\n  enableValidation = () => {\r\n    this._setEventListeners();\r\n  }\r\n}"," export default class Card {\r\n   constructor(card, templateSelector, {\r\n     handleCardClick,\r\n     handleLikeClick,\r\n     handleDeleteIconClick\r\n   }) {\r\n     this._card = card;\r\n     this._place = card.name;\r\n     this._url = card.link;\r\n     this._templateSelector = templateSelector;\r\n     this._element = this._getTemplate();\r\n     this._elementImage = this._element.querySelector('.elements__img');\r\n     this._elmentTitle = this._element.querySelector('.elements__title');\r\n     this._handleCardClick = handleCardClick;\r\n     this._handleLikeClick = handleLikeClick;\r\n     this._handleDeleteIconClick = handleDeleteIconClick;\r\n     this._elementLike = this._element.querySelector('.elements__like');\r\n     this._elementTrash = this._element.querySelector('.elements__trash');\r\n     this._buttonDeleteCard = document.querySelector('.popup__card_delete');\r\n   }\r\n\r\n   _getTemplate = () => {\r\n     const cardTemplate = this._templateSelector.querySelector('.elements__el').cloneNode(true)\r\n\r\n     return cardTemplate;\r\n   }\r\n   generateCard() {\r\n     this._elmentTitle.textContent = this._place;\r\n     this._elementImage.alt = this._place;\r\n     this._elementImage.src = this._url;\r\n\r\n     // установка слушателя для лайка и удаления карточки\r\n     this._setCardListeners(this._element);\r\n\r\n     return this._element;\r\n   }\r\n\r\n   // слушатель для card\r\n   _setCardListeners() {\r\n     // установка слушателя для открытия попапа картинки\r\n\r\n     this._elementImage.addEventListener('click', () => this._handleCardClick(this._place, this._url));\r\n\r\n     //для лайка\r\n     this._elementLike.addEventListener('click', this._likeCard);\r\n\r\n     //для открытия попапа подтверждения удаления\r\n     this._elementTrash.addEventListener('click', () => this._handleDeleteIconClick(this._card));\r\n\r\n     //для удаления\r\n   }\r\n\r\n   // возвращает лайк\r\n   _likeCard = () => {\r\n     this._elementLike.classList.toggle('elements__like_active');\r\n   }\r\n\r\n   // возвращаяет удаление\r\n   deleteCard = () => {\r\n     this._element.remove();\r\n   }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n /* export default class Card {\r\n   constructor(card, templateSelector, {\r\n     handleCardClick,\r\n     handleLikeClick,\r\n     handleDeleteIconClick\r\n   }) {\r\n     this._card = card;\r\n     this._place = card.name;\r\n     this._url = card.link;\r\n     this._templateSelector = templateSelector;\r\n     this._element = this._getTemplate();\r\n     this._elementImage = this._element.querySelector('.elements__img');\r\n     this._elmentTitle = this._element.querySelector('.elements__title');\r\n     this._handleCardClick = handleCardClick;\r\n     this._handleLikeClick = handleLikeClick;\r\n     this._handleDeleteIconClick = handleDeleteIconClick;\r\n     this._elementLike = this._element.querySelector('.elements__like');\r\n     this._elementTrash = this._element.querySelector('.elements__trash');\r\n     this._buttonDeleteCard = document.querySelector('.popup__card_delete');\r\n   }\r\n\r\n   _getTemplate = () => {\r\n     const cardTemplate = this._templateSelector.querySelector('.elements__el').cloneNode(true)\r\n\r\n     return cardTemplate;\r\n   }\r\n   generateCard() {\r\n     this._elmentTitle.textContent = this._place;\r\n     this._elementImage.alt = this._place;\r\n     this._elementImage.src = this._url;\r\n\r\n     // установка слушателя для лайка и удаления карточки\r\n     this._setCardListeners(this._element);\r\n\r\n     return this._element;\r\n   }\r\n\r\n   // слушатель для card\r\n   _setCardListeners() {\r\n     // установка слушателя для открытия попапа картинки\r\n\r\n     this._elementImage.addEventListener('click', () => this._handleCardClick(this._place, this._url));\r\n\r\n     //для лайка\r\n     this._elementLike.addEventListener('click', this._likeCard);\r\n\r\n     //для открытия попапа подтверждения удаления\r\n     this._elementTrash.addEventListener('click', () => this._handleDeleteIconClick(this._card));\r\n\r\n     //для удаления\r\n   }\r\n\r\n   // возвращает лайк\r\n   _likeCard = () => {\r\n     this._elementLike.classList.toggle('elements__like_active');\r\n   }\r\n\r\n   // возвращаяет удаление\r\n   deleteCard = () => {\r\n     this._element.remove();\r\n   }\r\n } */","// popups \r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAdd = document.querySelector('.popup_type_add');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst popupProfileAvatar = document.querySelector('.popup_type_avatar');\r\n\r\n\r\n// popups close button\r\nconst popupEditCloseButton = popupEdit.querySelector('.popup__close');\r\nconst popupAddCloseButton = popupAdd.querySelector('.popup__close');\r\nconst popupImageCloseButton = popupImage.querySelector('.popup__close');\r\n\r\n\r\n// popupImage\r\nconst popupImageInfo = popupImage.querySelector('.popup__image');\r\nconst popupFigcaptionImage = popupImage.querySelector('.popup__figcaption');\r\n\r\n// formEdit\r\nconst formEdit = popupEdit.querySelector('.popup__container');\r\nconst nameInput = formEdit.querySelector('.popup__input_type_name');\r\nconst jobInput = formEdit.querySelector('.popup__input_type_about');\r\n\r\n// formAdd\r\nconst formAdd = popupAdd.querySelector('.popup__container');\r\nconst placeName = formAdd.querySelector('.popup__input_type_place');\r\nconst imageLink = formAdd.querySelector('.popup__input_type_url');\r\nconst formAddCard = popupAdd.querySelector('.popup__form');\r\n\r\n\r\n//profile\r\nconst profile = document.querySelector('.profile');\r\nconst profileTitle = profile.querySelector('.profile__title');\r\nconst profileJob = profile.querySelector('.profile__job');\r\n\r\n//popups open button\r\nconst profileEditButton = profile.querySelector('.profile__edit-button');\r\nconst profileAddButton = profile.querySelector('.profile__add-button');\r\n\r\nconst cardTemplate = document.querySelector('.cards-template').content;\r\nconst cardsContainer = document.querySelector('.elements__container');\r\n\r\n\r\nconst buttonDeleteCard = document.querySelector('.popup__card_delete');\r\n\r\nconst elementTrashCard = document.querySelector('.elements__trash');\r\n\r\n\r\n\r\n// создаем объект для валидации\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__save-btn',\r\n    inactiveButtonClass: 'popup__save-btn_inactive',\r\n    inputErrorClass: 'popup__input_type_error'\r\n}\r\n\r\nexport {\r\n    popupImage,\r\n    popupImageInfo,\r\n    popupFigcaptionImage,\r\n    popupProfileAvatar,\r\n    popupEdit,\r\n    popupAdd,\r\n    popupEditCloseButton,\r\n    popupAddCloseButton,\r\n    popupImageCloseButton,\r\n    formEdit,\r\n    nameInput,\r\n    jobInput,\r\n    formAdd,\r\n    formAddCard,\r\n    placeName,\r\n    imageLink,\r\n    profileTitle,\r\n    profileJob,\r\n    profileEditButton,\r\n    profileAddButton,\r\n    cardTemplate,\r\n    cardsContainer,\r\n    validationConfig,\r\n    buttonDeleteCard,\r\n    elementTrashCard\r\n};","export default class Section {\r\n    constructor({\r\n        items,\r\n        renderer\r\n    }, container) {\r\n        this._items = items,\r\n            this._renderer = renderer,\r\n            this._container = document.querySelector(container)\r\n    }\r\n\r\n    //перебор карточек из массива объектов\r\n    renderItems() {\r\n        this._items.reverse().forEach((item) => this._renderer(item))\r\n    }\r\n\r\n    //добавление карточки в начало\r\n    addItem(itemHtml) {\r\n        this._container.prepend(itemHtml);\r\n    }\r\n}","export default class Popup {\r\n    constructor(popupSelector) {\r\n        this.popupSelector = document.querySelector(popupSelector);\r\n        this._popupButtonClose = this.popupSelector.querySelector('.popup__close');\r\n    }\r\n    // открытие попапа \r\n    open() {\r\n        this.popupSelector.classList.add('popup_opened');\r\n        this._setEventListeners();\r\n    }\r\n    // закрытие попапа \r\n    close() {\r\n        this.popupSelector.classList.remove('popup_opened');\r\n        this._removeEventListeners();\r\n    }\r\n\r\n    _removeEventListeners() {\r\n        // удаление слушателя для закрытия через кнопку Escape \r\n        document.removeEventListener('keydown', this._handleEscClose);\r\n        // удаление слушателя для закрытия попапа кликом на оверлей \r\n        this.popupSelector.removeEventListener('click', this._handleOverlayClose);\r\n        // удаление слушателя для закрытия попапа кликом на кнопку\r\n        this._popupButtonClose.removeEventListener('click', this._handleButtonClose);\r\n    }\r\n\r\n    // закрытие попапа клавишей Esc \r\n    _handleEscClose = (evt) => {\r\n        if (evt.key === \"Escape\") {\r\n            this.close();\r\n        }\r\n    }\r\n    //закрытие на клик по иконке закрытие попапа \r\n    _handleButtonClose = (evt) => {\r\n        if (evt.target.classList.contains('popup__close')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    // закрытие попапа кликом на оверлей \r\n    _handleOverlayClose = (evt) => {\r\n        if (evt.target.classList.contains('popup')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    _setEventListeners() {\r\n        // слушатель для закрытия попапа через кнопку Escape \r\n        document.addEventListener('keydown', this._handleEscClose);\r\n        // слушатель для закрытия попапа кликом на оверлей \r\n        this.popupSelector.addEventListener('click', this._handleOverlayClose);\r\n        // слушатель для закрытия попапа кликом на кнопку \r\n        this._popupButtonClose.addEventListener('click', this._handleButtonClose);\r\n    }\r\n}","import Popup from \"./Popup.js\";\r\nexport default class PopupWithForm extends Popup {\r\n\r\n    constructor({\r\n        handleFormSubmit\r\n    }, popupSelector) {\r\n        super(popupSelector);\r\n        this._handleFormSubmit = handleFormSubmit;\r\n        this._form = this.popupSelector.querySelector('.popup__form');\r\n        this._inputList = this._form.querySelectorAll('.popup__input');\r\n    }\r\n    // собираем данные с инпутов формы\r\n    _getInputValues = () => {\r\n        this._inputValues = {}\r\n        this._inputList.forEach(input => {\r\n            this._inputValues[input.name] = input.value;\r\n        });\r\n        return this._inputValues;\r\n    }\r\n\r\n    // отменяем стандартную отправку, добавляем методы класса\r\n    _handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        this._handleFormSubmit(this._getInputValues());\r\n\r\n        this.close();\r\n    }\r\n    _setEventListeners() {\r\n        super._setEventListeners();\r\n        // ставим слушатель на сабмит\r\n        this._form.addEventListener('submit', this._handleSubmit);\r\n    }\r\n\r\n    _removeEventListeners() {\r\n        super._removeEventListeners();\r\n        this._form.removeEventListener('submit', this._handleSubmit);\r\n    }\r\n    close() {\r\n        super.close();\r\n        this._form.reset();\r\n    }\r\n}","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithImage extends Popup {\r\n    constructor(popupSelector, popupImageInfo, popupFigcaptionImage) {\r\n        super(popupSelector);\r\n        this._popupImageInfo = popupImageInfo;\r\n        this._popupFigcaptionImage = popupFigcaptionImage;\r\n    }\r\n    open(name, link) {\r\n        this._popupImageInfo.src = link;\r\n        this._popupImageInfo.alt = name;\r\n        this._popupFigcaptionImage.textContent = name;\r\n        super.open();\r\n    }\r\n}","export default class UserInfo {\r\n    constructor(data) {\r\n        this._name = data.profileTitle;\r\n        this._about = data.profileJob;\r\n    }\r\n    // возвращяем объект с данными профиля\r\n    getUserInfo = () => {\r\n        const userInfo = {\r\n            name: this._name.textContent,\r\n            about: this._about.textContent\r\n        }\r\n        return userInfo;\r\n    }\r\n    // вставляем данные в профиль\r\n    setUserInfo(inputValues) {\r\n        this._name.textContent = inputValues.name;\r\n        this._about.textContent = inputValues.about;\r\n    }\r\n}\r\n\r\n\r\n/* export default class UserInfo {\r\n    constructor(data) {\r\n        this._name = data.profileTitle;\r\n        this._about = data.profileJob;\r\n    }\r\n    // возвращяем объект с данными профиля\r\n    getUserInfo = () => {\r\n        const userInfo = {\r\n            name: this._name.textContent,\r\n            about: this._about.textContent\r\n        }\r\n        return userInfo;\r\n    }\r\n    // вставляем данные в профиль\r\n    setUserInfo(inputValues) {\r\n        this._name.textContent = inputValues.name;\r\n        this._about.textContent = inputValues.about;\r\n    }\r\n} */","export default class Api {\r\n    constructor({\r\n        baseUrl,\r\n        headers\r\n    }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    // получение имени профиля от сервера\r\n    getProfileName() {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n                headers: this._headers\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json()\r\n                } else {\r\n                    return Promise.reject(`Ошибка: ${res.status}`);\r\n                }\r\n            })\r\n    }\r\n\r\n    // редактирования имени профиля на сервере\r\n    patchProfileName({\r\n        name,\r\n        about\r\n    }) {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name,\r\n                about\r\n            })\r\n        })\r\n    }\r\n\r\n    // получение карточек от сервера\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n                headers: this._headers,\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    return Promise.reject(`Ошибка: ${res.status}`);\r\n                }\r\n            })\r\n    }\r\n\r\n    //отправка новой карточки на сервер\r\n    postNewCard({\r\n        name,\r\n        link\r\n    }) {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name,\r\n                link\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    //покане реализовано\r\n    getLikesCards() {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n                headers: this._headers,\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    return Promise.reject(`Ошибка: ${res.status}`);\r\n                }\r\n            })\r\n    }\r\n\r\n    getAvatarProfile() {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n                headers: {\r\n                    authorization: '0abf54cd-edc4-4fb9-9a14-bce409a2bf77',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n    }\r\n\r\n    patchAvatarProfile(avatar) {\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: '0abf54cd-edc4-4fb9-9a14-bce409a2bf77',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar\r\n            })\r\n        })\r\n    }\r\n}","import Popup from './Popup.js'\r\n\r\nexport default class PopupWithSubmit extends Popup {\r\n    constructor(\r\n        popupSelector\r\n    ) {\r\n        super(popupSelector);\r\n    }\r\n}","import './index.css'; // добавили импорт главного файла стилей \r\n\r\n\r\nimport FormValidator from '../scripts/components/FormValidator.js';\r\nimport Card from '../scripts/components/Card.js';\r\nimport {\r\n  popupEdit,\r\n  popupAdd,\r\n  nameInput,\r\n  jobInput,\r\n  profileTitle,\r\n  profileJob,\r\n  profileEditButton,\r\n  profileAddButton,\r\n  cardTemplate,\r\n  validationConfig,\r\n  popupImageInfo,\r\n  popupFigcaptionImage,\r\n  buttonDeleteCard,\r\n  popupProfileAvatar,\r\n  elementTrashCard\r\n} from '../scripts/utils/constans.js';\r\nimport {\r\n  initialCards\r\n} from '../scripts/utils/cards.js';\r\nimport Section from '../scripts/components/Section.js';\r\nimport PopupWithForm from '../scripts/components/PopupWithForm.js';\r\nimport PopupWithImage from '../scripts/components/PopupWithImage.js';\r\nimport UserInfo from '../scripts/components/UserInfo.js';\r\nimport Api from '../scripts/components/Api.js';\r\nimport PopupWithSubmit from '../scripts/components/PopupWithSubmit.js';\r\n\r\n// создание экземляров класса валидации для формы редактирования и добавления карточки\r\nconst validationProfilePopup = new FormValidator(popupEdit, validationConfig);\r\nconst validationPlacePopup = new FormValidator(popupAdd, validationConfig);\r\nconst validationProfileAvatarPopup = new FormValidator(popupProfileAvatar, validationConfig);\r\n\r\nvalidationPlacePopup.enableValidation();\r\nvalidationProfilePopup.enableValidation();\r\nvalidationProfileAvatarPopup.enableValidation();\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54/',\r\n  headers: {\r\n    authorization: '0abf54cd-edc4-4fb9-9a14-bce409a2bf77',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nconst userInfo = new UserInfo({\r\n  profileTitle,\r\n  profileJob\r\n});\r\n\r\nconst popupWithImage = new PopupWithImage('.popup_type_image', popupImageInfo,\r\n  popupFigcaptionImage);\r\n\r\nconst popupWithSubmit = new PopupWithSubmit('.popup_type_delete');\r\n\r\n// создание экземпляра класса карточки\r\nconst createCard = (item) => {\r\n  const cardItem = new Card(item, cardTemplate, {\r\n\r\n    handleCardClick: (name, link) => {\r\n      popupWithImage.open(name, link);\r\n    },\r\n    handleLikeClick: () => {\r\n\r\n    },\r\n    handleDeleteIconClick: () => {\r\n      popupWithSubmit.open();\r\n      // удаление подтверждением\r\n      buttonDeleteCard.addEventListener('click', () => {\r\n        cardItem.deleteCard();\r\n        popupWithSubmit.close();\r\n      })\r\n    }\r\n  });\r\n  return cardItem.generateCard();\r\n}\r\n\r\n\r\n\r\n\r\n// Запрос карточек\r\napi.getInitialCards()\r\n  .then((data) => {\r\n    console.log(data);\r\n    //добавляем массив объектов карточек\r\n    const section = new Section({\r\n      items: data,\r\n      renderer: (item) => {\r\n        const card = createCard(item);\r\n        section.addItem(card);\r\n      }\r\n    }, '.elements__container');\r\n\r\n    //вызов метода класса Section\r\n    section.renderItems();\r\n\r\n    return section;\r\n  })\r\n  //Добавление карточек в разметку\r\n  .then((section) => {\r\n    const popupWithFormAdd = new PopupWithForm({\r\n      // получаем колбэком данные из инпутов\r\n      handleFormSubmit: (unputValues) => {\r\n        //создание экземпляра класса карточки и добавление на страницу\r\n        section.addItem(createCard(unputValues));\r\n\r\n        api.postNewCard(unputValues);\r\n\r\n\r\n      }\r\n    }, '.popup_type_add')\r\n\r\n\r\n    // функция открытия попапа добавления места\r\n    function openPlacePopup() {\r\n      validationPlacePopup.resetForm();\r\n      popupWithFormAdd.open();\r\n    }\r\n\r\n    // слушатель на клик открытие попапа добавления места\r\n    profileAddButton.addEventListener('click', () => {\r\n      openPlacePopup();\r\n    })\r\n\r\n\r\n  })\r\n  .catch(res => {\r\n    console.log(res)\r\n  });\r\n\r\napi.getProfileName().then(data => {\r\n  console.log(data);\r\n})\r\n\r\napi.getProfileName()\r\n  .then(data => {\r\n    profileTitle.textContent = data.name;\r\n    profileJob.textContent = data.about;\r\n\r\n    const popupWithFormEdit = new PopupWithForm({\r\n      // получаем колбэком данные из инпутов\r\n      handleFormSubmit: (unputValues) => {\r\n        // подставляем данные в профиль\r\n        userInfo.setUserInfo(unputValues);\r\n        api.patchProfileName(unputValues);\r\n      }\r\n    }, '.popup_type_edit')\r\n\r\n    // функция открытия попапа редактирования\r\n    function openProfilePopup() {\r\n\r\n      //получаем объект с данными профиля\r\n      const profileObject = userInfo.getUserInfo();\r\n      nameInput.value = profileObject.name;\r\n      jobInput.value = profileObject.about;\r\n\r\n      //сбрасываем валидацию\r\n      validationProfilePopup.resetForm();\r\n\r\n      popupWithFormEdit.open();\r\n    }\r\n    // слушатель на клик открытие попапа редактирования\r\n    profileEditButton.addEventListener('click', () => {\r\n      openProfilePopup();\r\n    })\r\n  })\r\n  .catch(res => {\r\n    return console.log(res)\r\n  })\r\n\r\n\r\n\r\n\r\nconst avatarProfile = document.querySelector('.profile__avatar');\r\n\r\napi.getAvatarProfile()\r\n  .then((data) => {\r\n    console.log(data.avatar);\r\n    avatarProfile.src = data.avatar\r\n  })\r\nconst popupAvatar = new PopupWithForm({\r\n    handleFormSubmit: (unputValues) => {\r\n      console.log(unputValues.link);\r\n      api.patchAvatarProfile(unputValues.link)\r\n    }\r\n  },\r\n  '.popup_type_avatar'\r\n)\r\n/// открытие попапа при клике на аватар\r\navatarProfile.addEventListener('click', () => {\r\n  popupAvatar.open();\r\n})\r\n\r\n\r\n\r\n\r\n/* api.pathAvatarProfile()\r\n  .then((data) => {\r\n    console.log('close avatar');\r\n    \r\n\r\n  })\r\n  .then(() => {\r\n    popupAvatar.close()\r\n    console.log('close avatar');\r\n  }) */\r\n\r\n/* ///меняем аватар\r\nconst avatar = document.querySelector('.profile__avatar');\r\nconsole.log(avatar.src = '1');\r\n\r\nfetch('https://mesto.nomoreparties.co/v1/cohort-54/users/me/avatar', {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: '0abf54cd-edc4-4fb9-9a14-bce409a2bf77',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      avatar: 'https://placepic.ru/wp-content/uploads/2018/10/interesnie_fakti_o_ejah.jpg'\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    console.log(res.avatar);\r\n    return avatar.src = res.avatar;\r\n  }); */\r\n\r\n\r\n\r\n/* \r\n\r\nimport './index.css'; // добавили импорт главного файла стилей \r\n\r\n\r\nimport FormValidator from '../scripts/components/FormValidator.js';\r\nimport Card from '../scripts/components/Card.js';\r\nimport {\r\n  popupEdit,\r\n  popupAdd,\r\n  nameInput,\r\n  jobInput,\r\n  profileTitle,\r\n  profileJob,\r\n  profileEditButton,\r\n  profileAddButton,\r\n  cardTemplate,\r\n  validationConfig,\r\n  popupImageInfo,\r\n  popupFigcaptionImage,\r\n  buttonDeleteCard,\r\n  elementTrashCard\r\n} from '../scripts/utils/constans.js';\r\nimport {\r\n  initialCards\r\n} from '../scripts/utils/cards.js';\r\nimport Section from '../scripts/components/Section.js';\r\nimport PopupWithForm from '../scripts/components/PopupWithForm.js';\r\nimport PopupWithImage from '../scripts/components/PopupWithImage.js';\r\nimport UserInfo from '../scripts/components/UserInfo.js';\r\nimport Api from '../scripts/components/Api.js';\r\nimport PopupWithSubmit from '../scripts/components/PopupWithSubmit.js';\r\n\r\n// создание экземляров класса валидации для формы редактирования и добавления карточки\r\nconst validationProfilePopup = new FormValidator(popupEdit, validationConfig);\r\nconst validationPlacePopup = new FormValidator(popupAdd, validationConfig);\r\n\r\nvalidationPlacePopup.enableValidation();\r\nvalidationProfilePopup.enableValidation();\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54/',\r\n  headers: {\r\n    authorization: '0abf54cd-edc4-4fb9-9a14-bce409a2bf77',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nconst userInfo = new UserInfo({\r\n  profileTitle,\r\n  profileJob\r\n});\r\n\r\nconst popupWithImage = new PopupWithImage('.popup_type_image', popupImageInfo,\r\n  popupFigcaptionImage);\r\n\r\nconst popupWithSubmit = new PopupWithSubmit('.popup_type_delete');\r\n\r\n// создание экземпляра класса карточки\r\nconst createCard = (item) => {\r\n  const cardItem = new Card(item, cardTemplate, {\r\n\r\n    handleCardClick: (name, link) => {\r\n      popupWithImage.open(name, link);\r\n    },\r\n    handleLikeClick: () => {\r\n\r\n    },\r\n    handleDeleteIconClick: () => {\r\n      popupWithSubmit.open();\r\n      // удаление подтверждением\r\n      buttonDeleteCard.addEventListener('click', () => {\r\n        cardItem.deleteCard();\r\n        popupWithSubmit.close();\r\n      })\r\n    }\r\n  });\r\n  return cardItem.generateCard();\r\n}\r\n\r\n\r\napi.getProfileName()\r\n  .then(data => {\r\n    profileTitle.textContent = data.name;\r\n    profileJob.textContent = data.about;\r\n\r\n    const popupWithFormEdit = new PopupWithForm({\r\n      // получаем колбэком данные из инпутов\r\n      handleFormSubmit: (unputValues) => {\r\n        // подставляем данные в профиль\r\n        userInfo.setUserInfo(unputValues);\r\n        api.pathProfileName(unputValues);\r\n      }\r\n    }, '.popup_type_edit')\r\n\r\n    // функция открытия попапа редактирования\r\n    function openProfilePopup() {\r\n\r\n      //получаем объект с данными профиля\r\n      const profileObject = userInfo.getUserInfo();\r\n      nameInput.value = profileObject.name;\r\n      jobInput.value = profileObject.about;\r\n\r\n      //сбрасываем валидацию\r\n      validationProfilePopup.resetForm();\r\n\r\n      popupWithFormEdit.open();\r\n    }\r\n    // слушатель на клик открытие попапа редактирования\r\n    profileEditButton.addEventListener('click', () => {\r\n      openProfilePopup();\r\n    })\r\n  })\r\n  .catch(res => {\r\n    return console.log(res)\r\n  })\r\n\r\n// Запрос карточек\r\napi.getInitialCards()\r\n  .then((data) => {\r\n    console.log(data);\r\n    //добавляем массив объектов карточек\r\n    const section = new Section({\r\n      items: data,\r\n      renderer: (item) => {\r\n        const card = createCard(item);\r\n        section.addItem(card);\r\n      }\r\n    }, '.elements__container');\r\n\r\n    //вызов метода класса Section\r\n    section.renderItems();\r\n\r\n    return section;\r\n  })\r\n  //Добавление карточек в разметку\r\n  .then((section) => {\r\n    const popupWithFormAdd = new PopupWithForm({\r\n      // получаем колбэком данные из инпутов\r\n      handleFormSubmit: (unputValues) => {\r\n        //создание экземпляра класса карточки и добавление на страницу\r\n        section.addItem(createCard(unputValues));\r\n\r\n        api.postNewCard(unputValues);\r\n\r\n\r\n      }\r\n    }, '.popup_type_add')\r\n\r\n\r\n    // функция открытия попапа добавления места\r\n    function openPlacePopup() {\r\n      validationPlacePopup.resetForm();\r\n      popupWithFormAdd.open();\r\n    }\r\n\r\n    // слушатель на клик открытие попапа добавления места\r\n    profileAddButton.addEventListener('click', () => {\r\n      openPlacePopup();\r\n    })\r\n\r\n\r\n  })\r\n  .catch(res => {\r\n    console.log(res)\r\n  });\r\n\r\n\r\n/*   document.querySelector('.elements__trash').addEventListener('click', () => {\r\n    document.querySelector('.popup_type_delete').classList.add('popup_opened');\r\n  })\r\n */\r\n\r\n// ЗАДУМКА КАК СЧИТАТЬ ЛАЙКИ\r\n/* api.getLikesCards()\r\n  .then((res) => {\r\n    if (res.likes.length > 0) {\r\n      let counter = 0;\r\n      res.likes.map(() => {\r\n        counter++;\r\n      });\r\n      document.querySelector('.elements__number').textContent = counter;\r\n    }\r\n  }) */"],"names":["FormValidator","popup","validationConfig","inputList","some","inputElement","validity","valid","errorSpan","_popupForm","querySelector","id","classList","remove","_inputErrorClass","textContent","errorMessage","add","_hideInputError","_showInputError","validationMessage","_hasInvalidInput","_inputList","_buttonElement","_inactiveButtonClass","disabled","forEach","addEventListener","_isValid","_toggleButtonState","_setEventListeners","this","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","_popup","Array","from","querySelectorAll","contains","Card","card","templateSelector","handleCardClick","handleLikeClick","handleDeleteIconClick","_templateSelector","cloneNode","_elementLike","toggle","_element","_card","_place","name","_url","link","_getTemplate","_elementImage","_elmentTitle","_handleCardClick","_handleLikeClick","_handleDeleteIconClick","_elementTrash","_buttonDeleteCard","document","alt","src","_setCardListeners","_likeCard","popupEdit","popupAdd","popupImage","popupProfileAvatar","popupImageInfo","popupFigcaptionImage","formEdit","nameInput","jobInput","formAdd","profile","profileTitle","profileJob","profileEditButton","profileAddButton","cardTemplate","content","buttonDeleteCard","Section","container","items","renderer","_items","_renderer","_container","reverse","item","itemHtml","prepend","Popup","popupSelector","evt","key","close","target","_popupButtonClose","_removeEventListeners","removeEventListener","_handleEscClose","_handleOverlayClose","_handleButtonClose","PopupWithForm","handleFormSubmit","_inputValues","input","value","preventDefault","_handleFormSubmit","_getInputValues","_form","_handleSubmit","reset","PopupWithImage","_popupImageInfo","_popupFigcaptionImage","UserInfo","data","_name","about","_about","inputValues","Api","baseUrl","headers","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","method","body","JSON","stringify","authorization","avatar","PopupWithSubmit","validationProfilePopup","validationPlacePopup","validationProfileAvatarPopup","enableValidation","api","userInfo","popupWithImage","popupWithSubmit","createCard","cardItem","open","deleteCard","generateCard","getInitialCards","console","log","section","addItem","renderItems","popupWithFormAdd","unputValues","postNewCard","resetForm","catch","getProfileName","popupWithFormEdit","setUserInfo","patchProfileName","profileObject","getUserInfo","avatarProfile","getAvatarProfile","popupAvatar","patchAvatarProfile"],"sourceRoot":""}